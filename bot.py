import telebot
import config
import random
from telebot import types
import COVID19Py
 
 
covid19 = COVID19Py.COVID19()
bot = telebot.TeleBot(config.token)

markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–∫–æ—Ä–æ–Ω–∞")
item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
markup.add(item1, item2)

@bot.message_handler(commands=['start'])
def welcome(message):
    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAIfZl9_JejD_V_wc6qkAdxMVrpr4cqAAAIuAQACIpHMAztF5TszquAQGwQ')
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–∂–∏–ª—ã–º —Å—ã—á–µ–º.".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
 
@bot.message_handler(content_types=['text'])
def lalala(message):
        if message.text == '–∫–æ—Ä–æ–Ω–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row('—Å—à–∞', '—Ä–æ—Å—Å–∏—è', '–∏—Ç–∞–ª–∏—è','—è–ø–æ–Ω–∏—è')
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É:",
        parse_mode='html', reply_markup=markup)
            bot.register_next_step_handler(message, corona)
        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
 
            markup.add(item1, item2)
 
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')
 
@bot.message_handler(content_types= ['text'])
def corona(message):
    final_message = ""
    get_message_bot = message.text.strip().lower()
    if get_message_bot == "—Å—à–∞":
        location = covid19.getLocationByCountryCode("US")
    elif get_message_bot == "—Ä–æ—Å—Å–∏—è":
        location = covid19.getLocationByCountryCode("RU")
    elif get_message_bot == "—è–ø–æ–Ω–∏—è":
        location = covid19.getLocationByCountryCode("JP")
    elif get_message_bot == "–∏—Ç–∞–ª–∏—è":
        location = covid19.getLocationByCountryCode("IT")
    else:
        location = covid19.getLatest()
        final_message = f"<u>–î–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É:</u>\n<b>–ó–∞–±–æ–ª–µ–≤—à–∏–µ: </b>{location['confirmed']}"

    if final_message == "":
        date = location[0]['last_updated'].split("T")
        time = date[1].split(".")
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAIgT1-A4QeHcYRTjLeh7Q35tkpYaU2IAAIZBgACu-LZS7x-ZyzJUUkPGwQ')
        final_message = f"<u>–î–∞–Ω–Ω—ã–µ –ø–æ —Å—Ç—Ä–∞–Ω–µ:</u>\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {location[0]['country_population']:,}\n" \
				f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {date[0]} {time[0]}\n–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ:\n<b>" \
				f"–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: </b>{location[0]['latest']['confirmed']:,}\n<b>–°–º–µ—Ç—Ä–µ–π: </b>" \
				f"{location[0]['latest']['deaths']:,}"

    bot.send_message(message.chat.id, final_message, parse_mode='html', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
 
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                reply_markup=None)
 
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")
 
    except Exception as e:
        print(repr(e))

if __name__ == '__main__':
     bot.polling(none_stop=True)